"block0": |-
  CommandXboxController exampleCommandController = new CommandXboxController(1); // Creates a CommandXboxController on port 1.
    Trigger xButton = exampleCommandController.x(); // Creates a new Trigger object for the `X` button on exampleCommandController
"block1": |-
  XboxController exampleController = new XboxController(2); // Creates an XboxController on port 2.
    Trigger yButton = new JoystickButton(exampleController, XboxController.Button.kY.value); // Creates a new JoystickButton object for the `Y` button on exampleController
"block2": |-
  DigitalInput limitSwitch = new DigitalInput(3); // Limit switch on DIO 3
    Trigger exampleTrigger = new Trigger(limitSwitch::get);
"block3": |-
  exampleButton
        // Binds a FooCommand to be scheduled when the button is pressed
        .onTrue(new FooCommand())
        // Binds a BarCommand to be scheduled when that same button is released
        .onFalse(new BarCommand());
"block4": |-
  // Binds an ExampleCommand to be scheduled when both the 'X' and 'Y' buttons of the driver gamepad are pressed
    exampleCommandController.x()
        .and(exampleCommandController.y())
        .onTrue(new ExampleCommand());
"block5": |-
  // debounces exampleButton with a 0.1s debounce time, rising edges only
    exampleButton.debounce(0.1).onTrue(new ExampleCommand());
    // debounces exampleButton with a 0.1s debounce time, both rising and falling edges
    exampleButton.debounce(0.1, Debouncer.DebounceType.kBoth).onTrue(new ExampleCommand());
