# validated: 2024-10-07 TW e53db15a2003 software/hardware-apis/sensors/counters.rst
block0: |
  // Create a new Counter object in two-pulse mode
  val counter = Counter(Counter.Mode.kTwoPulse).apply{
    // Set up the input channels for the counter
    setUpSource(1)
    setDownSource(2)
    // Set the decoding type to 2X
    setUpSourceEdge(true, true)
    setDownSourceEdge(true, true)
  }


block1: |
  // Create a new Counter object in two-pulse mode
  val counter = Counter(Counter.Mode.kSemiperiod).apply {
    // Set up the input channel for the counter
    counter.setUpSource(1)
    // Set the encoder to count pulse duration from rising edge to falling edge
    counter.setSemiPeriodMode(true)
  }


block10: |
  // Gets the last direction in which the counter moved
  counter.direction

block11: |
  // returns the current period in seconds
  counter.period

block12: |
  // Resets the encoder to read a distance of zero
  counter.reset()

block2: |
  // Return the measured pulse width in seconds
  counter.period

block3: |
  // Create a new Counter object in pulse-length mode
  val counter = Counter(Counter.Mode.kPulseLength).apply {
    // Set up the input channel for the counter
    counter.setUpSource(1)
    // Set the decoding type to 2X
    counter.setUpSourceEdge(true, true)
    // Set the counter to count down if the pulses are longer than .05 seconds
    counter.setPulseLengthMode(.05)
  }

block4: |
  // Create a new Counter object in external-direction mode
  val counter = Counter(Counter.Mode.kExternalDirection).apply {
    // Set up the input channels for the counter
    counter.setUpSource(1)
    counter.setDownSource(2)
    // Set the decoding type to 2X
    counter.setUpSourceEdge(true, true)
  }

block5: |
  Counter(Counter.Mode.kTwoPulse).apply {
    // Configures the counter to return a distance of 4 for every 256 pulses
    // Also changes the units of getRate
    setDistancePerPulse(4.0 / 256.0)
    // Configures the counter to consider itself stopped after .1 seconds
    setMaxPeriod(.1)
    // Reverses the direction of the counter
    setReverseDirection(true)
    // Configures an counter to average its period measurement over 5 samples
    // Can be between 1 and 127 samples
    samplesToAverage = 5
  }

block6: |
  // returns the current count
  counter.get()

block7: |
  // returns the current distance
  counter.distance

block8: |
  // Gets the current rate of the counter
  counter.rate

block9: |
  // Gets whether the counter is stopped
  counter.stopped
