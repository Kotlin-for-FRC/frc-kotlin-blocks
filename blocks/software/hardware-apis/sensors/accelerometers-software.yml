"block0": |-
  // Creates an analog accelerometer on analog input 0
      AnalogAccelerometer accelerometer = new AnalogAccelerometer(0);
      // Sets the sensitivity of the accelerometer to 1 volt per G
      accelerometer.setSensitivity(1);
      // Sets the zero voltage of the accelerometer to 3 volts
      accelerometer.setZero(3);
      // Gets the current acceleration
      double accel = accelerometer.getAcceleration();
"block1": |-
  // Sets the accelerometer to measure between -8 and 8 G's
      accelerometer.setRange(BuiltInAccelerometer.Range.k8G);
"block2": |-
  // Creates an ADXL345 accelerometer object on the MXP I2C port
      // with a measurement range from -8 to 8 G's
      ADXL345_I2C accelerometer = new ADXL345_I2C(I2C.Port.kMXP, ADXL345_I2C.Range.k8G);
"block3": |-
  // Creates an ADXL345 accelerometer object on the MXP SPI port
      // with a measurement range from -8 to 8 G's
      ADXL345_SPI accelerometer = new ADXL345_SPI(SPI.Port.kMXP, ADXL345_SPI.Range.k8G);
"block4": |-
  // Creates an ADXL362 accelerometer object on the MXP SPI port
      // with a measurement range from -8 to 8 G's
      ADXL362 accelerometer = new ADXL362(SPI.Port.kMXP, ADXL362.Range.k8G);
"block5": |-
  // Creates an object for the built-in accelerometer
      // Range defaults to +- 8 G's
      BuiltInAccelerometer accelerometer = new BuiltInAccelerometer();
"block6": |-
  double prevXAccel = 0.0;
      double prevYAccel = 0.0;
      BuiltInAccelerometer accelerometer = new BuiltInAccelerometer();
      @Override
      public void robotPeriodic() {
          // Gets the current accelerations in the X and Y directions
          double xAccel = accelerometer.getX();
          double yAccel = accelerometer.getY();
          // Calculates the jerk in the X and Y directions
          // Divides by .02 because default loop timing is 20ms
          double xJerk = (xAccel - prevXAccel) / 0.02;
          double yJerk = (yAccel - prevYAccel) / 0.02;
          prevXAccel = xAccel;
          prevYAccel = yAccel;
      }
"block7": |-
  BuiltInAccelerometer accelerometer = new BuiltInAccelerometer();
      // Create a LinearFilter that will calculate a moving average of the measured X acceleration over the past 10 iterations of the main loop
      LinearFilter xAccelFilter = LinearFilter.movingAverage(10);
      @Override
      public void robotPeriodic() {
          // Get the filtered X acceleration
          double filteredXAccel = xAccelFilter.calculate(accelerometer.getX());
      }
