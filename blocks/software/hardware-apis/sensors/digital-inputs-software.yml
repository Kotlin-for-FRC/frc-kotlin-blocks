# validated: 2024-10-07 TW e53db15a2003 software/hardware-apis/sensors/digital-inputs-software.rst
block0: |
  // Initializes a DigitalInput on DIO 0
  val input = DigitalInput(0)

block1: |
  // Gets the value of the digital input.  Returns true if the circuit is open.
  input.get()

block2: |
  // Initializes an AnalogTrigger on port 0
  val trigger0 = AnalogTrigger(0)

  // Initializes an AnalogInput on port 1 and enables 2-bit oversampling
  val input = AnalogInput(1).apply { averageBits = 2 }

  // Initializes an AnalogTrigger using the above input
  val trigger1 = AnalogTrigger(input)

block3: |
  val trigger =
      AnalogTrigger(0).apply {
        // Sets the trigger to enable at a raw value of 3500, and disable at a value of 1000
        setLimitsRaw(1000, 3500)
        // Sets the trigger to enable at a voltage of 4 volts, and disable at a value of 1.5 volts
        setLimitsVoltage(1.5, 4.0)
      }

block4: |
  val spark = Spark(0)
  // Limit switch on DIO 2
  val limit = DigitalInput(2)

  override fun autonomousPeriodic() {
    // Runs the motor forwards at half speed, unless the limit is pressed
    if (!limit.get()) {
      spark.set(.5)
    } else {
      spark.set(0.0)
    }
  }
