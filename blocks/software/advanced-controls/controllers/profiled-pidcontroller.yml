"block0": |-
  // Creates a ProfiledPIDController
    // Max velocity is 5 meters per second
    // Max acceleration is 10 meters per second
    ProfiledPIDController controller = new ProfiledPIDController(
      kP, kI, kD,
      new TrapezoidProfile.Constraints(5, 10));
"block1": |-
  // Calculates the output of the PID algorithm based on the sensor reading
    // and sends it to a motor
    motor.set(controller.calculate(encoder.getDistance(), goal));
"block2": |-
  double lastSpeed = 0;
    double lastTime = Timer.getFPGATimestamp();
      // Controls a simple motor's position using a SimpleMotorFeedforward
    // and a ProfiledPIDController
    public void goToPosition(double goalPosition) {
      double pidVal = controller.calculate(encoder.getDistance(), goalPosition);
      double acceleration = (controller.getSetpoint().velocity - lastSpeed) / (Timer.getFPGATimestamp() - lastTime);
      motor.setVoltage(
          pidVal
          + feedforward.calculate(controller.getSetpoint().velocity, acceleration));
      lastSpeed = controller.getSetpoint().velocity;
      lastTime = Timer.getFPGATimestamp();
    }
