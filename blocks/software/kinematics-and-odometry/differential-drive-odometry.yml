# validated: 2024-10-03 TW e53db15a2003 software/kinematics-and-odometry/differential-drive-odometry.rst
block0: |
  // Creating my odometry object. Here,
  // our starting pose is 5 meters along the long end of the field and in the
  // center of the field along the short end, facing forward.
  val m_odometry = 
      DifferentialDriveOdometry(
          m_gyro.rotation2d,
          m_leftEncoder.distance, 
          m_rightEncoder.distance,
          Pose2d(5.0, 13.5, Rotation2d()),
      )

block1: |
  override fun periodic() {
      // Get the rotation of the robot from the gyro.
      val gyroAngle = m_gyro.rotation2d
      // Update the pose
      m_pose = m_odometry.update(gyroAngle,
          m_leftEncoder.distance,
          m_rightEncoder.distance,
      )
  }
