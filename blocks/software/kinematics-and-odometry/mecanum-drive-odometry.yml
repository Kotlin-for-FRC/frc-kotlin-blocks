block0: |
  // Locations of the wheels relative to the robot center.
  val m_frontLeftLocation = Translation2d(0.381, 0.381)
  val m_frontRightLocation = Translation2d(0.381, -0.381)
  val m_backLeftLocation = Translation2d(-0.381, 0.381)
  val m_backRightLocation = Translation2d(-0.381, -0.381)
  // Creating my kinematics object using the wheel locations.
  val m_kinematics =
      MecanumDriveKinematics(
          m_frontLeftLocation,
          m_frontRightLocation,
          m_backLeftLocation,
          m_backRightLocation,
      )
  // Creating my odometry object from the kinematics object and the initial wheel positions.
  // Here, our starting pose is 5 meters along the long end of the field and in the
  // center of the field along the short end, facing the opposing alliance wall.
  val m_odometry =
      MecanumDriveOdometry(
          m_kinematics,
          m_gyro.rotation2d,
          MecanumDriveWheelPositions(
              m_frontLeftEncoder.distance,
              m_frontRightEncoder.distance,
              m_backLeftEncoder.distance,
              m_backRightEncoder.distance,
          ),
          Pose2d(5.0, 13.5, Rotation2d()),
      )

block1: |
  override fun periodic() {
      // Get my wheel positions
      val wheelPositions =
          MecanumDriveWheelPositions(
              m_frontLeftEncoder.distance,
              m_frontRightEncoder.distance,
              m_backLeftEncoder.distance,
              m_backRightEncoder.distance,
          )
      // Get the rotation of the robot from the gyro.
      val gyroAngle = m_gyro.rotation2d
      // Update the pose
      m_pose = m_odometry.update(gyroAngle, wheelPositions)
  }
