# validated: 2024-10-03 TW e53db15a2003 software/kinematics-and-odometry/mecanum-drive-odometry.rst
block0: |
  // Locations of the wheels relative to the robot center.
  val frontLeftLocation = Translation2d(0.381, 0.381)
  val frontRightLocation = Translation2d(0.381, -0.381)
  val backLeftLocation = Translation2d(-0.381, 0.381)
  val backRightLocation = Translation2d(-0.381, -0.381)
  // Creating my kinematics object using the wheel locations.
  val kinematics =
      MecanumDriveKinematics(
          frontLeftLocation,
          frontRightLocation,
          backLeftLocation,
          backRightLocation,
      )
  // Creating my odometry object from the kinematics object and the initial wheel positions.
  // Here, our starting pose is 5 meters along the long end of the field and in the
  // center of the field along the short end, facing the opposing alliance wall.
  val odometry =
      MecanumDriveOdometry(
          kinematics,
          gyro.rotation2d,
          MecanumDriveWheelPositions(
              frontLeftEncoder.distance,
              frontRightEncoder.distance,
              backLeftEncoder.distance,
              backRightEncoder.distance,
          ),
          Pose2d(5.0, 13.5, Rotation2d()),
      )

block1: |
  override fun periodic() {
      // Get my wheel positions
      val wheelPositions =
          MecanumDriveWheelPositions(
              frontLeftEncoder.distance,
              frontRightEncoder.distance,
              backLeftEncoder.distance,
              backRightEncoder.distance,
          )
      // Get the rotation of the robot from the gyro.
      val gyroAngle = gyro.rotation2d
      // Update the pose
      pose = odometry.update(gyroAngle, wheelPositions)
  }
